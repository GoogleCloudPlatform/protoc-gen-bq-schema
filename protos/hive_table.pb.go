// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hive_table.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HiveMessageOptions struct {
	// Specifies a name of table in Hive for the message.
	//
	// If not blank, indicates the message is a type of record to be stored into Hive.
	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// If true, Hive field names will default to a field's JSON name,
	// not its original/proto field name.
	UseJsonNames         bool     `protobuf:"varint,2,opt,name=use_json_names,json=useJsonNames,proto3" json:"use_json_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HiveMessageOptions) Reset()         { *m = HiveMessageOptions{} }
func (m *HiveMessageOptions) String() string { return proto.CompactTextString(m) }
func (*HiveMessageOptions) ProtoMessage()    {}
func (*HiveMessageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c1ea22e81d1a1ce, []int{0}
}

func (m *HiveMessageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiveMessageOptions.Unmarshal(m, b)
}
func (m *HiveMessageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiveMessageOptions.Marshal(b, m, deterministic)
}
func (m *HiveMessageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiveMessageOptions.Merge(m, src)
}
func (m *HiveMessageOptions) XXX_Size() int {
	return xxx_messageInfo_HiveMessageOptions.Size(m)
}
func (m *HiveMessageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HiveMessageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HiveMessageOptions proto.InternalMessageInfo

func (m *HiveMessageOptions) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *HiveMessageOptions) GetUseJsonNames() bool {
	if m != nil {
		return m.UseJsonNames
	}
	return false
}

var E_HiveOpts = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*HiveMessageOptions)(nil),
	Field:         1021,
	Name:          "gen_hive_schema.hive_opts",
	Tag:           "bytes,1021,opt,name=hive_opts",
	Filename:      "hive_table.proto",
}

func init() {
	proto.RegisterType((*HiveMessageOptions)(nil), "gen_hive_schema.HiveMessageOptions")
	proto.RegisterExtension(E_HiveOpts)
}

func init() {
	proto.RegisterFile("hive_table.proto", fileDescriptor_1c1ea22e81d1a1ce)
}

var fileDescriptor_1c1ea22e81d1a1ce = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0xb1, 0x4b, 0xc6, 0x30,
	0x10, 0xc5, 0x89, 0x83, 0xb6, 0x51, 0x54, 0x32, 0x15, 0x41, 0x0c, 0xea, 0xd0, 0x29, 0x1f, 0xe8,
	0xe6, 0xe8, 0x24, 0x82, 0x16, 0xba, 0xe9, 0x12, 0x92, 0x7a, 0xa6, 0x91, 0x36, 0x17, 0x7a, 0x69,
	0xff, 0x7b, 0x41, 0x9a, 0xe2, 0xa0, 0xdf, 0x74, 0xf0, 0xde, 0xbb, 0x77, 0xbf, 0xe3, 0xe7, 0xbd,
	0x5f, 0x40, 0x27, 0x63, 0x07, 0x50, 0x71, 0xc2, 0x84, 0xe2, 0xcc, 0x41, 0xd0, 0x59, 0xa5, 0xae,
	0x87, 0xd1, 0x5c, 0x48, 0x87, 0xe8, 0x06, 0xd8, 0x65, 0xdb, 0xce, 0x9f, 0xbb, 0x0f, 0xa0, 0x6e,
	0xf2, 0x31, 0xe1, 0xb4, 0xad, 0x5c, 0xbf, 0x71, 0xf1, 0xe4, 0x17, 0x78, 0x01, 0x22, 0xe3, 0xa0,
	0x89, 0xc9, 0x63, 0x20, 0x71, 0xc9, 0x79, 0xee, 0xd5, 0xc1, 0x8c, 0x50, 0x31, 0xc9, 0xea, 0xb2,
	0x2d, 0xb3, 0xf2, 0x6a, 0x46, 0x10, 0xb7, 0xfc, 0x74, 0x26, 0xd0, 0x5f, 0x84, 0x21, 0x27, 0xa8,
	0x3a, 0x90, 0xac, 0x2e, 0xda, 0x93, 0x99, 0xe0, 0x99, 0x30, 0xac, 0x21, 0x7a, 0xb0, 0xbc, 0xcc,
	0x2c, 0x18, 0x13, 0x89, 0x2b, 0xb5, 0xa1, 0xa8, 0x5f, 0x14, 0xf5, 0xf7, 0x64, 0xf5, 0x7d, 0x24,
	0x59, 0x7d, 0x7c, 0x77, 0xa3, 0xfe, 0xfd, 0xa0, 0xf6, 0xf1, 0xda, 0x62, 0xf5, 0x9b, 0x98, 0xe8,
	0xb1, 0x78, 0x3f, 0xcc, 0x85, 0x64, 0xb7, 0x79, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x09, 0x08,
	0x61, 0x42, 0x16, 0x01, 0x00, 0x00,
}
