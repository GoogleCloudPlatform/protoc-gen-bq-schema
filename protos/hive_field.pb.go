// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hive_field.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Message containing options related to Hive schema generation
// and management via Protobuf.
type HiveFieldOptions struct {
	// Flag to specify that a field should be marked as 'REQUIRED' when
	// used to generate schema for Hive.
	Require bool `protobuf:"varint,1,opt,name=require,proto3" json:"require,omitempty"`
	// Optionally override whatever type is resolved by the schema
	// generator. This is useful, for example, to store epoch timestamps
	// with the underlying 'TIMESTAMP' type, when normally, they would
	// be structured as 'INTEGER' fields.
	TypeOverride string `protobuf:"bytes,2,opt,name=type_override,json=typeOverride,proto3" json:"type_override,omitempty"`
	// Optionally omit a field from Hive schema.
	Ignore bool `protobuf:"varint,3,opt,name=ignore,proto3" json:"ignore,omitempty"`
	// Set the description for a field in Hive schema.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Customize the name of the field in the Hive schema.
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HiveFieldOptions) Reset()         { *m = HiveFieldOptions{} }
func (m *HiveFieldOptions) String() string { return proto.CompactTextString(m) }
func (*HiveFieldOptions) ProtoMessage()    {}
func (*HiveFieldOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_adf748e9b26c95f7, []int{0}
}

func (m *HiveFieldOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiveFieldOptions.Unmarshal(m, b)
}
func (m *HiveFieldOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiveFieldOptions.Marshal(b, m, deterministic)
}
func (m *HiveFieldOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiveFieldOptions.Merge(m, src)
}
func (m *HiveFieldOptions) XXX_Size() int {
	return xxx_messageInfo_HiveFieldOptions.Size(m)
}
func (m *HiveFieldOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HiveFieldOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HiveFieldOptions proto.InternalMessageInfo

func (m *HiveFieldOptions) GetRequire() bool {
	if m != nil {
		return m.Require
	}
	return false
}

func (m *HiveFieldOptions) GetTypeOverride() string {
	if m != nil {
		return m.TypeOverride
	}
	return ""
}

func (m *HiveFieldOptions) GetIgnore() bool {
	if m != nil {
		return m.Ignore
	}
	return false
}

func (m *HiveFieldOptions) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *HiveFieldOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

var E_Hive = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*HiveFieldOptions)(nil),
	Field:         1021,
	Name:          "gen_hive_schema.hive",
	Tag:           "bytes,1021,opt,name=hive",
	Filename:      "hive_field.proto",
}

func init() {
	proto.RegisterType((*HiveFieldOptions)(nil), "gen_hive_schema.HiveFieldOptions")
	proto.RegisterExtension(E_Hive)
}

func init() {
	proto.RegisterFile("hive_field.proto", fileDescriptor_adf748e9b26c95f7)
}

var fileDescriptor_adf748e9b26c95f7 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x59, 0x8d, 0x6d, 0xdd, 0x2a, 0x96, 0x3d, 0xc8, 0x22, 0x08, 0xab, 0x5e, 0x72, 0xda,
	0x82, 0xde, 0x3c, 0x7a, 0x10, 0x6f, 0x85, 0x80, 0x17, 0x2f, 0xa1, 0x6d, 0xa6, 0xe9, 0x40, 0xbb,
	0x13, 0x27, 0xdb, 0x80, 0xbf, 0xc6, 0x5f, 0x2a, 0x48, 0x26, 0x0d, 0x94, 0x9c, 0x76, 0xe7, 0x3d,
	0xde, 0xdb, 0xfd, 0x46, 0xcf, 0xb6, 0xd8, 0x40, 0xbe, 0x41, 0xd8, 0x15, 0xbe, 0x62, 0x8a, 0x64,
	0x6e, 0x4a, 0x08, 0xb9, 0xa8, 0xf5, 0x7a, 0x0b, 0xfb, 0xe5, 0x9d, 0x2b, 0x89, 0xca, 0x1d, 0xcc,
	0xc5, 0x5e, 0x1d, 0x36, 0xf3, 0x02, 0xea, 0x35, 0x63, 0x15, 0x89, 0xbb, 0xc8, 0xe3, 0xaf, 0xd2,
	0xb3, 0x0f, 0x6c, 0xe0, 0xbd, 0xad, 0x59, 0x54, 0x11, 0x29, 0xd4, 0xc6, 0xea, 0x31, 0xc3, 0xf7,
	0x01, 0x19, 0xac, 0x72, 0x2a, 0x9d, 0x64, 0xfd, 0x68, 0x9e, 0xf4, 0x75, 0xfc, 0xa9, 0x20, 0xa7,
	0x06, 0x98, 0xb1, 0x00, 0x7b, 0xe6, 0x54, 0x7a, 0x99, 0x5d, 0xb5, 0xe2, 0xe2, 0xa8, 0x99, 0x5b,
	0x3d, 0xc2, 0x32, 0x10, 0x83, 0x3d, 0x97, 0xf4, 0x71, 0x32, 0x4e, 0x4f, 0xfb, 0xf7, 0x91, 0x82,
	0x4d, 0x24, 0x7a, 0x2a, 0x19, 0xa3, 0x93, 0xb0, 0xdc, 0x83, 0xbd, 0x10, 0x4b, 0xee, 0xaf, 0x9f,
	0x3a, 0x69, 0x91, 0xcc, 0xbd, 0xef, 0x60, 0x7c, 0x0f, 0xe3, 0x4f, 0xff, 0x6c, 0xff, 0xc6, 0x4e,
	0xa5, 0xd3, 0xe7, 0x07, 0x3f, 0xd8, 0x81, 0x1f, 0xd2, 0x65, 0x52, 0xf7, 0x36, 0xf9, 0x1a, 0x49,
	0x51, 0xbd, 0xea, 0xce, 0x97, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xda, 0x1b, 0xcc, 0xc2, 0x50,
	0x01, 0x00, 0x00,
}
